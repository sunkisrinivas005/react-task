[{"E:\\Pro's\\PWA\\HomeAssignment\\react-task\\src\\index.js":"1","E:\\Pro's\\PWA\\HomeAssignment\\react-task\\src\\App.js":"2","E:\\Pro's\\PWA\\HomeAssignment\\react-task\\src\\reportWebVitals.js":"3","E:\\Pro's\\PWA\\HomeAssignment\\react-task\\src\\containers\\Home\\index.js":"4","E:\\Pro's\\PWA\\HomeAssignment\\react-task\\src\\store\\index.js":"5","E:\\Pro's\\PWA\\HomeAssignment\\react-task\\src\\reducers\\index.js":"6","E:\\Pro's\\PWA\\HomeAssignment\\react-task\\src\\reducers\\users.js":"7","E:\\Pro's\\PWA\\HomeAssignment\\react-task\\src\\constants\\actionTypes.js":"8","E:\\Pro's\\PWA\\HomeAssignment\\react-task\\src\\actions\\users.js":"9","E:\\Pro's\\PWA\\HomeAssignment\\react-task\\src\\middleware\\index.js":"10","E:\\Pro's\\PWA\\HomeAssignment\\react-task\\src\\containers\\Home\\UsersList\\index.js":"11","E:\\Pro's\\PWA\\HomeAssignment\\react-task\\src\\containers\\Home\\UsersList\\filters.js":"12","E:\\Pro's\\PWA\\HomeAssignment\\react-task\\src\\containers\\Home\\UsersList\\userInfoCard.js":"13","E:\\Pro's\\PWA\\HomeAssignment\\react-task\\src\\containers\\index.js":"14","E:\\Pro's\\PWA\\HomeAssignment\\react-task\\src\\containers\\Home\\routes.js":"15","E:\\Pro's\\PWA\\HomeAssignment\\react-task\\src\\containers\\Home\\UserPost\\index.js":"16","D:\\projects\\react-task\\src\\index.js":"17","D:\\projects\\react-task\\src\\App.js":"18","D:\\projects\\react-task\\src\\reportWebVitals.js":"19","D:\\projects\\react-task\\src\\store\\index.js":"20","D:\\projects\\react-task\\src\\containers\\index.js":"21","D:\\projects\\react-task\\src\\reducers\\index.js":"22","D:\\projects\\react-task\\src\\containers\\Home\\routes.js":"23","D:\\projects\\react-task\\src\\containers\\Home\\index.js":"24","D:\\projects\\react-task\\src\\reducers\\users.js":"25","D:\\projects\\react-task\\src\\containers\\Home\\UsersList\\index.js":"26","D:\\projects\\react-task\\src\\constants\\actionTypes.js":"27","D:\\projects\\react-task\\src\\actions\\users.js":"28","D:\\projects\\react-task\\src\\containers\\Home\\UsersList\\userInfoCard.js":"29","D:\\projects\\react-task\\src\\middleware\\index.js":"30","D:\\projects\\react-task\\src\\containers\\Home\\Login\\index.js":"31","D:\\projects\\react-task\\src\\containers\\Signup\\index.js":"32","D:\\projects\\react-task\\src\\utils\\history.js":"33","D:\\projects\\react-task\\src\\components\\Dialog\\index.js":"34","D:\\projects\\react-task\\src\\actions\\transactions.js":"35","D:\\projects\\react-task\\src\\containers\\Home\\Transactions\\index.js":"36","D:\\projects\\react-task\\src\\reducers\\transactions.js":"37","D:\\projects\\react-task\\src\\components\\TransactionCard\\index.js":"38","D:\\projects\\react-task\\src\\containers\\Home\\AddMoney\\index.js":"39","D:\\projects\\react-task\\src\\reducers\\addMoney.js":"40"},{"size":547,"mtime":1611752165071,"results":"41","hashOfConfig":"42"},{"size":529,"mtime":1611752161682,"results":"43","hashOfConfig":"42"},{"size":362,"mtime":499162500000,"results":"44","hashOfConfig":"42"},{"size":659,"mtime":1611754556634,"results":"45","hashOfConfig":"42"},{"size":1033,"mtime":1611740106145,"results":"46","hashOfConfig":"42"},{"size":230,"mtime":1611740154496,"results":"47","hashOfConfig":"42"},{"size":1768,"mtime":1611760849386,"results":"48","hashOfConfig":"42"},{"size":216,"mtime":1611744734564,"results":"49","hashOfConfig":"42"},{"size":1536,"mtime":1611755203929,"results":"50","hashOfConfig":"42"},{"size":812,"mtime":1611741104515,"results":"51","hashOfConfig":"42"},{"size":868,"mtime":1611755499164,"results":"52","hashOfConfig":"42"},{"size":1579,"mtime":1611765555586,"results":"53","hashOfConfig":"42"},{"size":2086,"mtime":1611765235672,"results":"54","hashOfConfig":"42"},{"size":440,"mtime":1611755213647,"results":"55","hashOfConfig":"42"},{"size":526,"mtime":1611755218570,"results":"56","hashOfConfig":"42"},{"size":7536,"mtime":1611765223851,"results":"57","hashOfConfig":"42"},{"size":565,"mtime":1640155744227,"results":"58","hashOfConfig":"59"},{"size":550,"mtime":1640155744220,"results":"60","hashOfConfig":"59"},{"size":375,"mtime":1640155744229,"results":"61","hashOfConfig":"59"},{"size":1033,"mtime":1640155744230,"results":"62","hashOfConfig":"59"},{"size":635,"mtime":1640193772201,"results":"63","hashOfConfig":"59"},{"size":380,"mtime":1640255290052,"results":"64","hashOfConfig":"59"},{"size":536,"mtime":1640200803897,"results":"65","hashOfConfig":"59"},{"size":2140,"mtime":1640255063037,"results":"66","hashOfConfig":"59"},{"size":1105,"mtime":1640195861879,"results":"67","hashOfConfig":"59"},{"size":3296,"mtime":1640200733540,"results":"68","hashOfConfig":"59"},{"size":994,"mtime":1640255492114,"results":"69","hashOfConfig":"59"},{"size":2959,"mtime":1640200094028,"results":"70","hashOfConfig":"59"},{"size":2129,"mtime":1640200379117,"results":"71","hashOfConfig":"59"},{"size":864,"mtime":1640161132148,"results":"72","hashOfConfig":"59"},{"size":2518,"mtime":1640196167614,"results":"73","hashOfConfig":"59"},{"size":3472,"mtime":1640199795598,"results":"74","hashOfConfig":"59"},{"size":119,"mtime":1640195785683,"results":"75","hashOfConfig":"59"},{"size":1122,"mtime":1640197413466,"results":"76","hashOfConfig":"59"},{"size":2758,"mtime":1640255778832,"results":"77","hashOfConfig":"59"},{"size":1733,"mtime":1640332662716,"results":"78","hashOfConfig":"59"},{"size":972,"mtime":1640247556950,"results":"79","hashOfConfig":"59"},{"size":1428,"mtime":1640332719182,"results":"80","hashOfConfig":"59"},{"size":2267,"mtime":1640255823949,"results":"81","hashOfConfig":"59"},{"size":1046,"mtime":1640255484133,"results":"82","hashOfConfig":"59"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ai4ow5",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"89"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},"11lw7tm",{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"119"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"119"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"119"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"119"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"119"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"119"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"119"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},"E:\\Pro's\\PWA\\HomeAssignment\\react-task\\src\\index.js",[],"E:\\Pro's\\PWA\\HomeAssignment\\react-task\\src\\App.js",[],"E:\\Pro's\\PWA\\HomeAssignment\\react-task\\src\\reportWebVitals.js",[],["173","174"],"E:\\Pro's\\PWA\\HomeAssignment\\react-task\\src\\containers\\Home\\index.js",[],"E:\\Pro's\\PWA\\HomeAssignment\\react-task\\src\\store\\index.js",[],"E:\\Pro's\\PWA\\HomeAssignment\\react-task\\src\\reducers\\index.js",["175"],"import {combineReducers} from 'redux';\r\nimport {connectRouter} from 'connected-react-router'\r\nimport Users from './users';\r\n\r\nexport default (history) => combineReducers({\r\n  router: connectRouter(history),\r\n  Users : Users\r\n});\r\n","E:\\Pro's\\PWA\\HomeAssignment\\react-task\\src\\reducers\\users.js",[],"E:\\Pro's\\PWA\\HomeAssignment\\react-task\\src\\constants\\actionTypes.js",[],"E:\\Pro's\\PWA\\HomeAssignment\\react-task\\src\\actions\\users.js",[],"E:\\Pro's\\PWA\\HomeAssignment\\react-task\\src\\middleware\\index.js",[],"E:\\Pro's\\PWA\\HomeAssignment\\react-task\\src\\containers\\Home\\UsersList\\index.js",["176"],"E:\\Pro's\\PWA\\HomeAssignment\\react-task\\src\\containers\\Home\\UsersList\\filters.js",[],"E:\\Pro's\\PWA\\HomeAssignment\\react-task\\src\\containers\\Home\\UsersList\\userInfoCard.js",[],"E:\\Pro's\\PWA\\HomeAssignment\\react-task\\src\\containers\\index.js",[],"E:\\Pro's\\PWA\\HomeAssignment\\react-task\\src\\containers\\Home\\routes.js",[],"E:\\Pro's\\PWA\\HomeAssignment\\react-task\\src\\containers\\Home\\UserPost\\index.js",["177","178","179","180","181"],"D:\\projects\\react-task\\src\\index.js",[],["182","183"],"D:\\projects\\react-task\\src\\App.js",[],"D:\\projects\\react-task\\src\\reportWebVitals.js",[],"D:\\projects\\react-task\\src\\store\\index.js",[],"D:\\projects\\react-task\\src\\containers\\index.js",[],"D:\\projects\\react-task\\src\\reducers\\index.js",["184"],"import { combineReducers } from \"redux\";\r\nimport { connectRouter } from \"connected-react-router\";\r\nimport Users from \"./users\";\r\nimport Transactions from \"./transactions\";\r\nimport AddMoney from \"./addMoney\";\r\nexport default (history) =>\r\n  combineReducers({\r\n    router: connectRouter(history),\r\n    Users: Users,\r\n    Transactions: Transactions,\r\n    AddMoney: AddMoney,\r\n  });\r\n","D:\\projects\\react-task\\src\\containers\\Home\\routes.js",[],"D:\\projects\\react-task\\src\\containers\\Home\\index.js",["185"],"import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport UserList from \"./UsersList\";\r\nimport Transactions from \"./Transactions\";\r\nimport AddMoney from \"./AddMoney\";\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function BasicTabs({ history }) {\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const handleFetch = () => {\r\n      let walletID = localStorage.getItem(\"walletId\");\r\n      !walletID && history.push(\"/login\");\r\n    };\r\n    handleFetch();\r\n  }, []);\r\n\r\n  return (\r\n    <Box sx={{ width: \"100%\" }}>\r\n      <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"basic tabs example\"\r\n        >\r\n          <Tab label=\"Users\" {...a11yProps(0)} />\r\n          <Tab label=\"Transactions\" {...a11yProps(1)} />\r\n          <Tab label=\"Add Money\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </Box>\r\n      <TabPanel value={value} index={0}>\r\n        <UserList />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <Transactions />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <AddMoney />\r\n      </TabPanel>\r\n    </Box>\r\n  );\r\n}\r\n","D:\\projects\\react-task\\src\\reducers\\users.js",[],"D:\\projects\\react-task\\src\\containers\\Home\\UsersList\\index.js",["186","187"],"import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport UserInfoCard from \"./userInfoCard\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Dialog from \"../../../components/Dialog\";\r\nimport { getAllUsers, loginUser } from \"../../../actions/users\";\r\nimport { createTransaction } from \"../../../actions/transactions\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport { isEmpty } from \"lodash\";\r\n\r\nconst UserList = ({ history }) => {\r\n  let dispatch = useDispatch();\r\n\r\n  const handlegetAllUsers = async () => {\r\n    dispatch(getAllUsers());\r\n  };\r\n\r\n  useEffect(() => {\r\n    handlegetAllUsers();\r\n  }, []);\r\n\r\n  let { users, loggedUser } = useSelector(({ Users }) => Users);\r\n  const { user } = loggedUser;\r\n\r\n  useEffect(() => {\r\n    let walletID = localStorage.getItem(\"walletId\");\r\n    isEmpty(user) && dispatch(loginUser(walletID, () => {}));\r\n  }, [user]);\r\n\r\n  const [isOpen, setOpen] = React.useState(false);\r\n  const [from, setFrom] = React.useState(\"\");\r\n  const [money, setMoney] = React.useState(\"\");\r\n  const [message, setMessage] = React.useState(\"\");\r\n\r\n  const handleSendMoney = () => {\r\n    const callback = () => {\r\n      setMessage(\"successful\");\r\n      setTimeout(() => {\r\n        setOpen(false);\r\n        setMoney(0);\r\n        setFrom(\"\");\r\n        setMessage(\"\");\r\n      }, 2000);\r\n    };\r\n    dispatch(\r\n      createTransaction(\r\n        {\r\n          fromAddress: user.walletId,\r\n          amount: money,\r\n          toAddress: from,\r\n          transactionType: \"DEBIT\",\r\n        },\r\n        callback\r\n      )\r\n    );\r\n  };\r\n  console.log(loggedUser, \"walletId\");\r\n  return (\r\n    <>\r\n      <div>\r\n        <h4>Email: {user && user.emailAddress}</h4>\r\n        <p>WalletId: {user && user.walletId}</p>\r\n        <p>balance: {user && user.balance}</p>\r\n      </div>\r\n\r\n      <div className=\"col-lg-12 row\">\r\n        {users ? (\r\n          users.map((i, n) => {\r\n            return (\r\n              <UserInfoCard\r\n                {...i}\r\n                key={n}\r\n                history={history}\r\n                handleOpen={(id) => {\r\n                  console.log(id);\r\n                  setFrom(id);\r\n                  setOpen(true);\r\n                }}\r\n              />\r\n            );\r\n          })\r\n        ) : (\r\n          <div>\r\n            <h3> No Data Found</h3>\r\n          </div>\r\n        )}\r\n        <Dialog open={isOpen} handleClose={() => setOpen(false)}>\r\n          {message && <p>{message}</p>}\r\n          <ValidatorForm onSubmit={() => handleSendMoney()}>\r\n            <TextValidator\r\n              label=\"Amount\"\r\n              fullWidth\r\n              onChange={(e) => setMoney(e.target.value)}\r\n              name=\"Amount\"\r\n              value={money}\r\n              validators={[\"required\"]}\r\n              errorMessages={[\"this field is required\"]}\r\n            />\r\n            <div\r\n              className=\"col-lg-12 row\"\r\n              style={{ justifyContent: \"center\", marginTop: \"20px\" }}\r\n            >\r\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </div>\r\n          </ValidatorForm>\r\n        </Dialog>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","D:\\projects\\react-task\\src\\constants\\actionTypes.js",[],"D:\\projects\\react-task\\src\\actions\\users.js",["188"],"import {\r\n  GET_ALL_USERS,\r\n  SHOW_MESSAGE,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILED,\r\n  LOGIN,\r\n} from \"../constants/actionTypes\";\r\nimport history from \"../utils/history\";\r\nimport { get, isEmpty } from \"lodash\";\r\nimport API from \"../middleware/index\";\r\n\r\nexport const getAllUsers = () => {\r\n  return async (dispatch) => {\r\n    let url = \"/user/get-all\";\r\n    let method = \"GET\";\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n    };\r\n    let response = await API({ url, method, headers });\r\n    const body = response && response.data ? response.data : [];\r\n    if (response.code === 200 && body.length) {\r\n      dispatch({\r\n        type: GET_ALL_USERS,\r\n        payload: body ? body : {},\r\n      });\r\n    } else if (response.code !== 200) {\r\n      dispatch({\r\n        type: SHOW_MESSAGE,\r\n        payload: body && body.data ? body.data : {},\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const getPostByUserID = async (id) => {\r\n  let url = `/posts?userId=${id}`;\r\n  let method = \"GET\";\r\n  const headers = {\r\n    \"Content-Type\": \"application/json\",\r\n  };\r\n  let response = await API({ url, method, headers });\r\n  const body = response && response.data ? response.data : [];\r\n  return body;\r\n};\r\n\r\nexport const getUserDetailsById = async (id) => {\r\n  let url = `/users/${id}`;\r\n  let method = \"GET\";\r\n  const headers = {\r\n    \"Content-Type\": \"application/json\",\r\n  };\r\n  let response = await API({ url, method, headers });\r\n  const body = response && response.data ? response.data : [];\r\n  return body;\r\n};\r\n\r\nexport const loginUser = (id, c) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: LOGIN,\r\n    });\r\n    let url = `/user/get-details/${id}`;\r\n    let method = \"GET\";\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n    };\r\n    let response = await API({ url, method, headers });\r\n    const body = get(response, \"data[0]\");\r\n    if (response.code === 200 && !isEmpty(body)) {\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: body ? body : {},\r\n      });\r\n      localStorage.setItem(\"walletId\", id);\r\n      c();\r\n    } else if (response.code !== 200) {\r\n      dispatch({\r\n        type: LOGIN_FAILED,\r\n        payload: { message: get(response, \"message\") },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const createUser = (data, c) => {\r\n  return async (dispatch) => {\r\n    let url = `/user/create`;\r\n    let method = \"POST\";\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n    };\r\n\r\n    let response = await API({ url, method, data, headers });\r\n    const body = get(response, \"data\");\r\n    if (response.code === 200 && !isEmpty(body)) {\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: body ? body : {},\r\n      });\r\n      localStorage.setItem(\"walletId\", get(body, \"walletId\"));\r\n      c();\r\n    } else if (response.code !== 200) {\r\n      dispatch({\r\n        type: LOGIN_FAILED,\r\n        payload: { message: get(response, \"message\") },\r\n      });\r\n    }\r\n  };\r\n};\r\n","D:\\projects\\react-task\\src\\containers\\Home\\UsersList\\userInfoCard.js",[],"D:\\projects\\react-task\\src\\middleware\\index.js",[],"D:\\projects\\react-task\\src\\containers\\Home\\Login\\index.js",[],"D:\\projects\\react-task\\src\\containers\\Signup\\index.js",["189"],"import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createUser } from \"../../actions/users\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\n\r\nconst Login = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  //   React.useEffect(() => {\r\n  //     const handleFetch = () => {\r\n  //       let walletID = localStorage.getItem(\"walletId\");\r\n  //       !walletID && history.push(\"/login\");\r\n  //     };\r\n  //   }, []);\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [balance, setBalance] = React.useState(0);\r\n  const [name, setName] = React.useState(\"\");\r\n\r\n  const handleSubmit = () => {\r\n    const callback = () => {\r\n      history.push(\"/home/users\");\r\n    };\r\n    dispatch(createUser({ emailAddress: email, balance, name }, callback));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"col-lg-12\">\r\n        <h3\r\n          style={{\r\n            padding: \"10px\",\r\n            textAlign: \"center\",\r\n            justifyContent: \"center\",\r\n            alignSelf: \"center\",\r\n          }}\r\n        >\r\n          Signup\r\n        </h3>\r\n      </div>\r\n      <div className=\"col-lg-12 row\" style={{ justifyContent: \"center\" }}>\r\n        <div className=\"col-lg-5\" style={{ justifyContent: \"center\" }}>\r\n          <ValidatorForm onSubmit={handleSubmit}>\r\n            <div className=\"col-lg-10\" style={{ margin: \"20px\" }}>\r\n              <TextValidator\r\n                label=\"name\"\r\n                fullWidth\r\n                onChange={(e) => setName(e.target.value)}\r\n                name=\"name\"\r\n                value={name}\r\n                variant=\"outlined\"\r\n                validators={[\"required\"]}\r\n                errorMessages={[\"this field is required\"]}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-10\" style={{ margin: \"20px\" }}>\r\n              <TextValidator\r\n                label=\"Email\"\r\n                fullWidth\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                name=\"email\"\r\n                value={email}\r\n                variant=\"outlined\"\r\n                validators={[\"required\", \"isEmail\"]}\r\n                errorMessages={[\"this field is required\", \"email is not valid\"]}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-10\" style={{ margin: \"20px\" }}>\r\n              <TextValidator\r\n                label=\"Balance\"\r\n                fullWidth\r\n                onChange={(e) => setBalance(e.target.value)}\r\n                name=\"balance\"\r\n                value={balance}\r\n                type=\"number\"\r\n                variant=\"outlined\"\r\n                validators={[\"required\"]}\r\n                errorMessages={[\"this field is required\"]}\r\n              />\r\n            </div>\r\n\r\n            <div\r\n              className=\"col-lg-12 row\"\r\n              style={{ justifyContent: \"center\", marginTop: \"20px\" }}\r\n            >\r\n              <Button\r\n                onClick={() => history.push(\"/login\")}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ marginRight: \"10px\" }}\r\n              >\r\n                Login\r\n              </Button>\r\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </div>\r\n          </ValidatorForm>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","D:\\projects\\react-task\\src\\utils\\history.js",[],"D:\\projects\\react-task\\src\\components\\Dialog\\index.js",["190","191"],"import * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Slide from \"@mui/material/Slide\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function AlertDialogSlide(props) {\r\n  const { open, children, handleClose } = props;\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle>{\"Transaction\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            {children}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","D:\\projects\\react-task\\src\\actions\\transactions.js",[],"D:\\projects\\react-task\\src\\containers\\Home\\Transactions\\index.js",["192"],"D:\\projects\\react-task\\src\\reducers\\transactions.js",[],"D:\\projects\\react-task\\src\\components\\TransactionCard\\index.js",["193"],"D:\\projects\\react-task\\src\\containers\\Home\\AddMoney\\index.js",["194"],"import React, { useEffect } from \"react\";\r\nimport { Button, CircularProgress } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { get } from \"lodash\";\r\nimport { addMoney } from \"../../../actions/transactions\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\n\r\nconst Login = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const [amount, setAmount] = React.useState(\"\");\r\n\r\n  let { loggedUser } = useSelector(({ Users }) => Users);\r\n  let { isLoading, successMessage, errorMessage } = useSelector(\r\n    ({ AddMoney }) => AddMoney\r\n  );\r\n  console.log(loggedUser, \"loggedUser\");\r\n\r\n  useEffect(() => {\r\n    if (successMessage) {\r\n      setTimeout(() => {\r\n        dispatch({\r\n          type: \"CLOSE_MESSAGE\",\r\n        });\r\n      }, 3000);\r\n    }\r\n  }, [successMessage]);\r\n\r\n  const handleSubmit = () => {\r\n    dispatch(\r\n      addMoney({\r\n        walletId: get(loggedUser, \"user.walletId\"),\r\n        amount,\r\n        transactionType: \"ADD_MONEY\",\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"col-lg-12 row\" style={{ justifyContent: \"center\" }}>\r\n        {successMessage && <p>{successMessage}</p>}\r\n        {errorMessage && <p>{errorMessage}</p>}\r\n        {isLoading && <CircularProgress size={40} />}\r\n        <div className=\"col-lg-5\" style={{ justifyContent: \"center\" }}>\r\n          <ValidatorForm\r\n            onSubmit={() => handleSubmit()}\r\n            onError={(errors) => console.log(errors)}\r\n          >\r\n            <TextValidator\r\n              label=\"Amount\"\r\n              fullWidth\r\n              onChange={(e) => setAmount(e.target.value)}\r\n              name=\"Amount\"\r\n              value={amount}\r\n              type=\"number\"\r\n              validators={[\"required\"]}\r\n              errorMessages={[\"this field is required\"]}\r\n            />\r\n            <div\r\n              className=\"col-lg-12 row\"\r\n              style={{ justifyContent: \"center\", marginTop: \"20px\" }}\r\n            >\r\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                Add Money\r\n              </Button>\r\n            </div>\r\n          </ValidatorForm>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","D:\\projects\\react-task\\src\\reducers\\addMoney.js",[],{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","severity":1,"message":"200","line":5,"column":1,"nodeType":"201","endLine":8,"endColumn":4},{"ruleId":"202","severity":1,"message":"203","line":16,"column":6,"nodeType":"204","endLine":16,"endColumn":8,"suggestions":"205"},{"ruleId":"206","severity":1,"message":"207","line":5,"column":8,"nodeType":"208","messageId":"209","endLine":5,"endColumn":12},{"ruleId":"202","severity":1,"message":"210","line":50,"column":8,"nodeType":"204","endLine":50,"endColumn":10,"suggestions":"211"},{"ruleId":"212","severity":1,"message":"213","line":115,"column":29,"nodeType":"214","endLine":115,"endColumn":119},{"ruleId":"212","severity":1,"message":"213","line":124,"column":30,"nodeType":"214","endLine":124,"endColumn":135},{"ruleId":"212","severity":1,"message":"213","line":133,"column":34,"nodeType":"214","endLine":133,"endColumn":139},{"ruleId":"195","replacedBy":"215"},{"ruleId":"197","replacedBy":"216"},{"ruleId":"199","severity":1,"message":"200","line":6,"column":1,"nodeType":"201","endLine":12,"endColumn":6},{"ruleId":"202","severity":1,"message":"217","line":56,"column":6,"nodeType":"204","endLine":56,"endColumn":8,"suggestions":"218"},{"ruleId":"202","severity":1,"message":"203","line":20,"column":6,"nodeType":"204","endLine":20,"endColumn":8,"suggestions":"219"},{"ruleId":"202","severity":1,"message":"220","line":28,"column":6,"nodeType":"204","endLine":28,"endColumn":12,"suggestions":"221"},{"ruleId":"206","severity":1,"message":"222","line":8,"column":8,"nodeType":"208","messageId":"209","endLine":8,"endColumn":15},{"ruleId":"206","severity":1,"message":"223","line":3,"column":23,"nodeType":"208","messageId":"209","endLine":3,"endColumn":34},{"ruleId":"206","severity":1,"message":"224","line":2,"column":8,"nodeType":"208","messageId":"209","endLine":2,"endColumn":14},{"ruleId":"206","severity":1,"message":"225","line":4,"column":8,"nodeType":"208","messageId":"209","endLine":4,"endColumn":21},{"ruleId":"202","severity":1,"message":"226","line":31,"column":6,"nodeType":"204","endLine":31,"endColumn":12,"suggestions":"227"},{"ruleId":"206","severity":1,"message":"228","line":15,"column":9,"nodeType":"208","messageId":"209","endLine":15,"endColumn":14},{"ruleId":"202","severity":1,"message":"220","line":26,"column":6,"nodeType":"204","endLine":26,"endColumn":22,"suggestions":"229"},"no-native-reassign",["230"],"no-negated-in-lhs",["231"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handlegetAllUsers'. Either include it or remove the dependency array.","ArrayExpression",["232"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'handleGetPostByUser' and 'handleGetUserById'. Either include them or remove the dependency array.",["233"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["230"],["231"],"React Hook React.useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["234"],["235"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["236"],"'history' is defined but never used.","'useSelector' is defined but never used.","'Button' is defined but never used.","'DialogActions' is defined but never used.","React Hook useEffect has a missing dependency: 'handleGetTransactions'. Either include it or remove the dependency array.",["237"],"'users' is assigned a value but never used.",["238"],"no-global-assign","no-unsafe-negation",{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"239","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},"Update the dependencies array to be: [handlegetAllUsers]",{"range":"252","text":"253"},"Update the dependencies array to be: [handleGetPostByUser, handleGetUserById]",{"range":"254","text":"255"},"Update the dependencies array to be: [history]",{"range":"256","text":"257"},{"range":"258","text":"253"},"Update the dependencies array to be: [dispatch, user]",{"range":"259","text":"260"},"Update the dependencies array to be: [handleGetTransactions, page]",{"range":"261","text":"262"},"Update the dependencies array to be: [dispatch, successMessage]",{"range":"263","text":"264"},[407,409],"[handlegetAllUsers]",[1280,1282],"[handleGetPostByUser, handleGetUserById]",[1426,1428],"[history]",[697,699],[948,954],"[dispatch, user]",[905,911],"[handleGetTransactions, page]",[836,852],"[dispatch, successMessage]"]